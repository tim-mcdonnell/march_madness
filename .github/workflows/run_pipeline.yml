name: Run Prediction Pipeline

on:
  # Run daily at 8:30 AM CST (14:30 UTC)
  schedule:
    - cron: '30 14 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      stages:
        description: 'Pipeline stages to run (comma-separated)'
        required: false
        default: 'all'
      years:
        description: 'Years to process (comma-separated)'
        required: false
      clean_all:
        description: 'Clean all data before running'
        required: false
        type: boolean
        default: false

jobs:
  run_pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install uv
      run: |
        pip install uv
        
    - name: Create virtual environment and install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e .
        
    - name: Cache data files
      uses: actions/cache@v3
      with:
        path: data/raw
        key: ${{ runner.os }}-raw-data-${{ hashFiles('config/pipeline_config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-raw-data-
    
    - name: Create config
      run: |
        source .venv/bin/activate
        python run_pipeline.py --create-config
        
    - name: Run pipeline (scheduled)
      if: github.event_name == 'schedule'
      run: |
        source .venv/bin/activate
        # For daily runs, we only update the current season data
        python run_pipeline.py --stages data --years 2025 --log-level INFO
        
    - name: Run pipeline (manual)
      if: github.event_name == 'workflow_dispatch'
      run: |
        source .venv/bin/activate
        # Parse inputs for manual runs
        STAGES="${{ github.event.inputs.stages }}"
        YEARS="${{ github.event.inputs.years }}"
        CLEAN="${{ github.event.inputs.clean_all }}"
        
        # Build command
        CMD="python run_pipeline.py"
        
        # Add stages if specified
        if [ "$STAGES" != "all" ] && [ -n "$STAGES" ]; then
          STAGES_ARG=$(echo $STAGES | tr ',' ' ')
          CMD="$CMD --stages $STAGES_ARG"
        fi
        
        # Add years if specified
        if [ -n "$YEARS" ]; then
          YEARS_ARG=$(echo $YEARS | tr ',' ' ')
          CMD="$CMD --years $YEARS_ARG"
        fi
        
        # Add clean flag if true
        if [ "$CLEAN" = "true" ]; then
          CMD="$CMD --clean-all"
        fi
        
        # Run command
        echo "Running: $CMD"
        $CMD
        
    - name: Upload logs
      uses: actions/upload-artifact@v3
      with:
        name: pipeline-logs
        path: pipeline.log 